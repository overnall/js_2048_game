{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = initialState;\n        this.state = initialState.map((row)=>[\n                ...row\n            ]);\n    }\n    areArraysEqual(arr1, arr2) {\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            if (arr1[i][j] !== arr2[i][j]) return false;\n        }\n        return true;\n    }\n    move(direction) {\n        if (this.status !== \"playing\") return;\n        const prevBoard = this.state.map((row)=>[\n                ...row\n            ]);\n        if (direction === \"left\") this.state = this.state.map((row)=>this.mergeRow(row));\n        else if (direction === \"right\") {\n            let cS = this.state;\n            //  cS - currentState\n            cS = this.state.map((row)=>this.mergeRow([\n                    ...row\n                ].reverse()).reverse());\n            this.state = cS;\n        } else if (direction === \"up\") for(let col = 0; col < 4; col++){\n            const column = [];\n            for(let row = 0; row < 4; row++)column.push(this.state[row][col]);\n            const mergedColumn = this.mergeRow(column);\n            for(let row = 0; row < 4; row++)this.state[row][col] = mergedColumn[row];\n        }\n        else if (direction === \"down\") for(let col = 0; col < 4; col++){\n            const column = [];\n            for(let row = 3; row >= 0; row--)column.push(this.state[row][col]);\n            const mergedColumn = this.mergeRow(column);\n            for(let row = 3; row >= 0; row--)this.state[row][col] = mergedColumn[3 - row];\n        }\n        if (!this.areArraysEqual(this.state, prevBoard)) {\n            this.addRandomBlock();\n            if (!this.canMove()) this.status = \"lose\";\n        }\n    }\n    mergeRow(row) {\n        const numbers = row.filter((value)=>value !== 0);\n        for(let i = 0; i < numbers.length - 1; i++)if (numbers[i] === numbers[i + 1]) {\n            numbers[i] *= 2;\n            this.score += numbers[i];\n            numbers.splice(i + 1, 1);\n            if (numbers[i] === 2048) this.status = \"win\";\n        }\n        while(numbers.length < 4)numbers.push(0);\n        return numbers;\n    }\n    canMove() {\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 4; j++){\n            if (this.state[i][j] === 0) return true;\n        }\n        for(let i = 0; i < 4; i++)for(let j = 0; j < 3; j++){\n            if (this.state[i][j] === this.state[i][j + 1] || this.state[j][i] === this.state[j + 1][i]) return true;\n        }\n        return false;\n    }\n    moveLeft() {\n        this.move(\"left\");\n    }\n    moveRight() {\n        this.move(\"right\");\n    }\n    moveUp() {\n        this.move(\"up\");\n    }\n    moveDown() {\n        this.move(\"down\");\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        if (this.status === \"idle\") {\n            this.status = \"playing\";\n            this.addRandomBlock();\n            this.addRandomBlock();\n        }\n    }\n    restart() {\n        this.score = 0;\n        this.status = \"idle\";\n        this.state = this.initialState.map((row)=>[\n                ...row\n            ]);\n    }\n    addRandomBlock() {\n        const emptyBlocks = [];\n        for(let r = 0; r < 4; r++){\n            for(let bl = 0; bl < 4; bl++)if (this.state[r][bl] === 0) emptyBlocks.push([\n                r,\n                bl\n            ]);\n        }\n        if (emptyBlocks.length === 0) return;\n        const [row, block] = emptyBlocks[Math.floor(Math.random() * emptyBlocks.length)];\n        this.state[row][block] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$game = new (0, (/*@__PURE__*/$parcel$interopDefault($a5fd07fa01589658$exports)))();\nconst $09e991522ca7e64e$var$startButton = document.querySelector(\".button.start\");\nfunction $09e991522ca7e64e$var$updateUi() {\n    const state = $09e991522ca7e64e$var$game.getState();\n    const gameScore = document.querySelector(\".game-score\");\n    gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n    document.querySelectorAll(\".field-cell\").forEach((cell, index)=>{\n        const row = Math.floor(index / 4);\n        const col = index % 4;\n        const value = state[row][col];\n        cell.className = \"field-cell\";\n        if (value !== 0) cell.classList.add(`field-cell--${value}`);\n        cell.textContent = value || \"\";\n        document.querySelector(\".message-start\").classList.toggle(\"hidden\", $09e991522ca7e64e$var$game.getStatus() !== \"idle\");\n        document.querySelector(\".message-lose\").classList.toggle(\"hidden\", $09e991522ca7e64e$var$game.getStatus() !== \"loss\");\n        document.querySelector(\".message-win\").classList.toggle(\"hidden\", $09e991522ca7e64e$var$game.getStatus() !== \"win\");\n    });\n    if ($09e991522ca7e64e$var$game.getStatus() === \"idle\") {\n        $09e991522ca7e64e$var$startButton.textContent = \"Start\";\n        $09e991522ca7e64e$var$startButton.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"start\");\n    } else {\n        $09e991522ca7e64e$var$startButton.textContent = \"Restart\";\n        $09e991522ca7e64e$var$startButton.classList.remove(\"start\");\n        $09e991522ca7e64e$var$startButton.classList.add(\"restart\");\n    }\n    if ($09e991522ca7e64e$var$game.getStatus() === \"win\") document.querySelector(\".message-win\").classList.remove(\"hidden\");\n    else if ($09e991522ca7e64e$var$game.getStatus() === \"lose\") document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n}\ndocument.addEventListener(\"keydown\", (e)=>{\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n    }\n    $09e991522ca7e64e$var$updateUi();\n});\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$game.getStatus() === \"idle\") $09e991522ca7e64e$var$game.start();\n    else $09e991522ca7e64e$var$game.restart();\n    $09e991522ca7e64e$var$updateUi();\n});\n$09e991522ca7e64e$var$updateUi();\n\n\n//# sourceMappingURL=index.72a1e0fa.js.map\n","'use strict';\n\nimport Game from '../modules/Game.class';\n\nconst game = new Game();\n\nconst startButton = document.querySelector('.button.start');\n\nfunction updateUi() {\n  const state = game.getState();\n  const gameScore = document.querySelector('.game-score');\n\n  gameScore.textContent = game.getScore();\n\n  document.querySelectorAll('.field-cell').forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = state[row][col];\n\n    cell.className = 'field-cell';\n\n    if (value !== 0) {\n      cell.classList.add(`field-cell--${value}`);\n    }\n\n    cell.textContent = value || '';\n\n    document\n      .querySelector('.message-start')\n      .classList.toggle('hidden', game.getStatus() !== 'idle');\n\n    document\n      .querySelector('.message-lose')\n      .classList.toggle('hidden', game.getStatus() !== 'loss');\n\n    document\n      .querySelector('.message-win')\n      .classList.toggle('hidden', game.getStatus() !== 'win');\n  });\n\n  if (game.getStatus() === 'idle') {\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n  } else {\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n  }\n\n  if (game.getStatus() === 'win') {\n    document.querySelector('.message-win').classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  updateUi();\n});\n\nstartButton.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n  } else {\n    game.restart();\n  }\n\n  updateUi();\n});\n\nupdateUi();\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = initialState;\n    this.state = initialState.map((row) => [...row]);\n  }\n\n  areArraysEqual(arr1, arr2) {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (arr1[i][j] !== arr2[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevBoard = this.state.map((row) => [...row]);\n\n    if (direction === 'left') {\n      this.state = this.state.map((row) => this.mergeRow(row));\n    } else if (direction === 'right') {\n      let cS = this.state;\n\n      //  cS - currentState\n      cS = this.state.map((row) => this.mergeRow([...row].reverse()).reverse());\n\n      this.state = cS;\n    } else if (direction === 'up') {\n      for (let col = 0; col < 4; col++) {\n        const column = [];\n\n        for (let row = 0; row < 4; row++) {\n          column.push(this.state[row][col]);\n        }\n\n        const mergedColumn = this.mergeRow(column);\n\n        for (let row = 0; row < 4; row++) {\n          this.state[row][col] = mergedColumn[row];\n        }\n      }\n    } else if (direction === 'down') {\n      for (let col = 0; col < 4; col++) {\n        const column = [];\n\n        for (let row = 3; row >= 0; row--) {\n          column.push(this.state[row][col]);\n        }\n\n        const mergedColumn = this.mergeRow(column);\n\n        for (let row = 3; row >= 0; row--) {\n          this.state[row][col] = mergedColumn[3 - row];\n        }\n      }\n    }\n\n    if (!this.areArraysEqual(this.state, prevBoard)) {\n      this.addRandomBlock();\n\n      if (!this.canMove()) {\n        this.status = 'lose';\n      }\n    }\n  }\n\n  mergeRow(row) {\n    const numbers = row.filter((value) => value !== 0);\n\n    for (let i = 0; i < numbers.length - 1; i++) {\n      if (numbers[i] === numbers[i + 1]) {\n        numbers[i] *= 2;\n        this.score += numbers[i];\n        numbers.splice(i + 1, 1);\n\n        if (numbers[i] === 2048) {\n          this.status = 'win';\n        }\n      }\n    }\n\n    while (numbers.length < 4) {\n      numbers.push(0);\n    }\n\n    return numbers;\n  }\n\n  canMove() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === 0) {\n          return true;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (\n          this.state[i][j] === this.state[i][j + 1] ||\n          this.state[j][i] === this.state[j + 1][i]\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  moveLeft() {\n    this.move('left');\n  }\n  moveRight() {\n    this.move('right');\n  }\n  moveUp() {\n    this.move('up');\n  }\n  moveDown() {\n    this.move('down');\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n\n      this.addRandomBlock();\n      this.addRandomBlock();\n    }\n  }\n\n  restart() {\n    this.score = 0;\n    this.status = 'idle';\n\n    this.state = this.initialState.map((row) => [...row]);\n  }\n\n  addRandomBlock() {\n    const emptyBlocks = [];\n\n    for (let r = 0; r < 4; r++) {\n      for (let bl = 0; bl < 4; bl++) {\n        if (this.state[r][bl] === 0) {\n          emptyBlocks.push([r, bl]);\n        }\n      }\n    }\n\n    if (emptyBlocks.length === 0) {\n      return;\n    }\n\n    const [row, block] =\n      emptyBlocks[Math.floor(Math.random() * emptyBlocks.length)];\n\n    this.state[row][block] = Math.random() < 0.9 ? 2 : 4;\n  }\n}\n\nmodule.exports = Game;\n"],"names":["a","$a5fd07fa01589658$exports","$09e991522ca7e64e$var$game","constructor","initialState","score","status","state","map","row","areArraysEqual","arr1","arr2","i","j","move","direction","prevBoard","mergeRow","cS","reverse","col","column","push","mergedColumn","addRandomBlock","canMove","numbers","filter","value","length","splice","moveLeft","moveRight","moveUp","moveDown","getScore","getState","getStatus","start","restart","emptyBlocks","r","bl","block","Math","floor","random","__esModule","default","$09e991522ca7e64e$var$startButton","document","querySelector","$09e991522ca7e64e$var$updateUi","gameScore","textContent","querySelectorAll","forEach","cell","index","className","classList","add","toggle","remove","addEventListener","e","key"],"version":3,"file":"index.72a1e0fa.js.map"}